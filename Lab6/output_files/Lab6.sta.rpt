TimeQuest Timing Analyzer report for Lab6
Tue Nov 28 18:44:49 2023
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'Clock'
 12. Slow Model Hold: 'Clock'
 13. Slow Model Minimum Pulse Width: 'Clock'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'Clock'
 24. Fast Model Hold: 'Clock'
 25. Fast Model Minimum Pulse Width: 'Clock'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; Lab6                                                              ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 16     ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                            ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; Clock      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { Clock } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 223.41 MHz ; 223.41 MHz      ; Clock      ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; Clock ; -3.476 ; -29.891       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; Clock ; 0.561 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; Clock ; -1.222 ; -35.222               ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'Clock'                                                                                                      ;
+--------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; -3.476 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.514      ;
; -3.442 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.475      ;
; -3.415 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.448      ;
; -3.363 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.401      ;
; -3.331 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.364      ;
; -3.329 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.362      ;
; -3.315 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.353      ;
; -3.307 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.346      ;
; -3.286 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.319      ;
; -3.281 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.314      ;
; -3.270 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.303      ;
; -3.250 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.283      ;
; -3.248 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.286      ;
; -3.244 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.283      ;
; -3.243 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.282      ;
; -3.239 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.272      ;
; -3.224 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.257      ;
; -3.222 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.260      ;
; -3.218 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.251      ;
; -3.214 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.247      ;
; -3.212 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.251      ;
; -3.188 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.221      ;
; -3.186 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.219      ;
; -3.185 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.223      ;
; -3.180 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.219      ;
; -3.170 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.203      ;
; -3.160 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.193      ;
; -3.151 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.184      ;
; -3.149 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.187      ;
; -3.121 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.154      ;
; -3.115 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.148      ;
; -3.113 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.146      ;
; -3.109 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.147      ;
; -3.108 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.141      ;
; -3.107 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.140      ;
; -3.103 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.136      ;
; -3.094 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.133      ;
; -3.081 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.119      ;
; -3.081 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.114      ;
; -3.077 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.110      ;
; -3.069 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.108      ;
; -3.063 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.102      ;
; -3.047 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.080      ;
; -3.042 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.080      ;
; -3.040 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.073      ;
; -3.008 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.041      ;
; -3.006 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.044      ;
; -3.004 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.037      ;
; -2.992 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 4.031      ;
; -2.984 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.017      ;
; -2.972 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.005      ;
; -2.968 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 4.001      ;
; -2.967 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 4.005      ;
; -2.964 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.997      ;
; -2.960 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.999      ;
; -2.956 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.995      ;
; -2.952 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.985      ;
; -2.936 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.969      ;
; -2.934 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 3.972      ;
; -2.933 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.966      ;
; -2.925 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.964      ;
; -2.908 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.947      ;
; -2.904 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 3.947      ;
; -2.904 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 3.942      ;
; -2.900 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.933      ;
; -2.897 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.930      ;
; -2.887 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.007     ; 3.916      ;
; -2.873 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.008      ; 3.917      ;
; -2.870 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.903      ;
; -2.861 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.894      ;
; -2.855 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.888      ;
; -2.841 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.880      ;
; -2.837 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.876      ;
; -2.832 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 3.870      ;
; -2.822 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.855      ;
; -2.818 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.857      ;
; -2.815 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.854      ;
; -2.815 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.007     ; 3.844      ;
; -2.811 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 3.849      ;
; -2.811 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 3.849      ;
; -2.807 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.840      ;
; -2.794 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.008      ; 3.838      ;
; -2.789 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.822      ;
; -2.784 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.008      ; 3.828      ;
; -2.783 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 3.826      ;
; -2.783 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.007     ; 3.812      ;
; -2.778 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.817      ;
; -2.765 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.804      ;
; -2.759 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.792      ;
; -2.751 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.007     ; 3.780      ;
; -2.742 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.781      ;
; -2.740 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.773      ;
; -2.735 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.774      ;
; -2.719 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 3.762      ;
; -2.714 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.747      ;
; -2.702 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.741      ;
; -2.684 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.008      ; 3.728      ;
; -2.677 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.003     ; 3.710      ;
; -2.674 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 3.713      ;
; -2.665 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.007     ; 3.694      ;
+--------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'Clock'                                                                                                      ;
+-------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; 0.561 ; FSM:inst1|yfsm.s1         ; FSM:inst1|yfsm.s2   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.827      ;
; 0.703 ; FSM:inst1|yfsm.s0         ; FSM:inst1|yfsm.s1   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.969      ;
; 0.705 ; FSM:inst1|yfsm.s6         ; FSM:inst1|yfsm.s7   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.971      ;
; 0.706 ; FSM:inst1|yfsm.s7         ; FSM:inst1|yfsm.s8   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.972      ;
; 0.877 ; FSM:inst1|yfsm.s5         ; FSM:inst1|yfsm.s6   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 1.143      ;
; 1.041 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.309      ;
; 1.065 ; FSM:inst1|yfsm.s8         ; FSM:inst1|yfsm.s0   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 1.331      ;
; 1.088 ; FSM:inst1|yfsm.s3         ; FSM:inst1|yfsm.s4   ; Clock        ; Clock       ; 0.000        ; -0.004     ; 1.350      ;
; 1.091 ; FSM:inst1|yfsm.s4         ; FSM:inst1|yfsm.s5   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 1.357      ;
; 1.112 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 1.375      ;
; 1.125 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.389      ;
; 1.248 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 1.517      ;
; 1.258 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 1.521      ;
; 1.261 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 1.524      ;
; 1.286 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 1.555      ;
; 1.290 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 1.553      ;
; 1.292 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.560      ;
; 1.296 ; StorageUnit_A:inst5|Q[7]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 1.559      ;
; 1.299 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 1.562      ;
; 1.328 ; ALU:inst3|Neg             ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; 0.000      ; 1.594      ;
; 1.392 ; FSM:inst1|yfsm.s8         ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.656      ;
; 1.598 ; FSM:inst1|yfsm.s2         ; FSM:inst1|yfsm.s3   ; Clock        ; Clock       ; 0.000        ; 0.004      ; 1.868      ;
; 1.606 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.866      ;
; 1.660 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 1.919      ;
; 1.769 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.033      ;
; 1.794 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.053      ;
; 1.812 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.076      ;
; 1.863 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.122      ;
; 1.869 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.133      ;
; 1.870 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.144      ;
; 1.892 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 2.161      ;
; 1.909 ; StorageUnit_A:inst5|Q[7]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.168      ;
; 1.921 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.195      ;
; 1.932 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.206      ;
; 1.944 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.212      ;
; 1.974 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.238      ;
; 2.005 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.269      ;
; 2.013 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.281      ;
; 2.048 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 2.311      ;
; 2.049 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.313      ;
; 2.050 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.318      ;
; 2.062 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.326      ;
; 2.117 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 2.386      ;
; 2.132 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.004      ; 2.402      ;
; 2.139 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.407      ;
; 2.143 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.411      ;
; 2.152 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.416      ;
; 2.155 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.419      ;
; 2.156 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.420      ;
; 2.158 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.426      ;
; 2.175 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.443      ;
; 2.191 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.465      ;
; 2.207 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.475      ;
; 2.232 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.500      ;
; 2.257 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.525      ;
; 2.261 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.529      ;
; 2.267 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.531      ;
; 2.268 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 2.532      ;
; 2.294 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.562      ;
; 2.298 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.566      ;
; 2.301 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 2.570      ;
; 2.307 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 2.570      ;
; 2.314 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.573      ;
; 2.317 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.004      ; 2.587      ;
; 2.325 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.584      ;
; 2.332 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.600      ;
; 2.344 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.618      ;
; 2.355 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.614      ;
; 2.367 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 2.640      ;
; 2.388 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.647      ;
; 2.398 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.666      ;
; 2.411 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.685      ;
; 2.419 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.687      ;
; 2.419 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.693      ;
; 2.423 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.691      ;
; 2.427 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.686      ;
; 2.450 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.718      ;
; 2.454 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.722      ;
; 2.462 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.736      ;
; 2.463 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.722      ;
; 2.467 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 2.740      ;
; 2.469 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.737      ;
; 2.473 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 2.746      ;
; 2.477 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.003     ; 2.740      ;
; 2.499 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.773      ;
; 2.502 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.761      ;
; 2.518 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.786      ;
; 2.529 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.797      ;
; 2.530 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.789      ;
; 2.533 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.801      ;
; 2.546 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.814      ;
; 2.560 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 2.828      ;
; 2.563 ; StorageUnit_A:inst5|Q[7]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.822      ;
; 2.570 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.829      ;
; 2.581 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 2.854      ;
; 2.602 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 2.871      ;
; 2.606 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.865      ;
; 2.624 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.008      ; 2.898      ;
; 2.629 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 2.902      ;
; 2.643 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.007     ; 2.902      ;
+-------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'Clock'                                                                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; Clock ; Rise       ; Clock                       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Neg               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Neg               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[3]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[3]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[4]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[4]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[5]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[5]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[6]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[6]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[7]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[7]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s0           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s0           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s1           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s1           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s2           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s2           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s3           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s3           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s4           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s4           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s5           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s5           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s6           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s6           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s7           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s7           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s8           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s8           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[4]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[4]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[5]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[5]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[6]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[6]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[7]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[7]   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock|combout               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock|combout               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clk_delay_ctrl|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clk_delay_ctrl|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clk_delay_ctrl|clkout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clk_delay_ctrl|clkout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst1|yfsm.s0|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst1|yfsm.s0|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst1|yfsm.s1|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst1|yfsm.s1|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst1|yfsm.s2|clk           ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+


+-----------------------------------------------------------------------------+
; Setup Times                                                                 ;
+-----------------+------------+-------+-------+------------+-----------------+
; Data Port       ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------------+------------+-------+-------+------------+-----------------+
; A[*]            ; Clock      ; 4.568 ; 4.568 ; Rise       ; Clock           ;
;  A[0]           ; Clock      ; 0.705 ; 0.705 ; Rise       ; Clock           ;
;  A[1]           ; Clock      ; 0.481 ; 0.481 ; Rise       ; Clock           ;
;  A[2]           ; Clock      ; 0.306 ; 0.306 ; Rise       ; Clock           ;
;  A[3]           ; Clock      ; 4.084 ; 4.084 ; Rise       ; Clock           ;
;  A[4]           ; Clock      ; 4.173 ; 4.173 ; Rise       ; Clock           ;
;  A[5]           ; Clock      ; 4.323 ; 4.323 ; Rise       ; Clock           ;
;  A[6]           ; Clock      ; 4.568 ; 4.568 ; Rise       ; Clock           ;
;  A[7]           ; Clock      ; 4.105 ; 4.105 ; Rise       ; Clock           ;
; B[*]            ; Clock      ; 1.259 ; 1.259 ; Rise       ; Clock           ;
;  B[0]           ; Clock      ; 1.259 ; 1.259 ; Rise       ; Clock           ;
;  B[1]           ; Clock      ; 0.453 ; 0.453 ; Rise       ; Clock           ;
;  B[2]           ; Clock      ; 0.220 ; 0.220 ; Rise       ; Clock           ;
;  B[3]           ; Clock      ; 0.470 ; 0.470 ; Rise       ; Clock           ;
;  B[4]           ; Clock      ; 0.097 ; 0.097 ; Rise       ; Clock           ;
;  B[5]           ; Clock      ; 1.022 ; 1.022 ; Rise       ; Clock           ;
;  B[6]           ; Clock      ; 1.105 ; 1.105 ; Rise       ; Clock           ;
;  B[7]           ; Clock      ; 1.095 ; 1.095 ; Rise       ; Clock           ;
; data_in         ; Clock      ; 1.689 ; 1.689 ; Rise       ; Clock           ;
; decoder_enabler ; Clock      ; 2.017 ; 2.017 ; Rise       ; Clock           ;
+-----------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Hold Times                                                                    ;
+-----------------+------------+--------+--------+------------+-----------------+
; Data Port       ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------------+------------+--------+--------+------------+-----------------+
; A[*]            ; Clock      ; -0.076 ; -0.076 ; Rise       ; Clock           ;
;  A[0]           ; Clock      ; -0.475 ; -0.475 ; Rise       ; Clock           ;
;  A[1]           ; Clock      ; -0.251 ; -0.251 ; Rise       ; Clock           ;
;  A[2]           ; Clock      ; -0.076 ; -0.076 ; Rise       ; Clock           ;
;  A[3]           ; Clock      ; -3.854 ; -3.854 ; Rise       ; Clock           ;
;  A[4]           ; Clock      ; -3.943 ; -3.943 ; Rise       ; Clock           ;
;  A[5]           ; Clock      ; -4.093 ; -4.093 ; Rise       ; Clock           ;
;  A[6]           ; Clock      ; -4.338 ; -4.338 ; Rise       ; Clock           ;
;  A[7]           ; Clock      ; -3.875 ; -3.875 ; Rise       ; Clock           ;
; B[*]            ; Clock      ; 0.133  ; 0.133  ; Rise       ; Clock           ;
;  B[0]           ; Clock      ; -1.029 ; -1.029 ; Rise       ; Clock           ;
;  B[1]           ; Clock      ; -0.223 ; -0.223 ; Rise       ; Clock           ;
;  B[2]           ; Clock      ; 0.010  ; 0.010  ; Rise       ; Clock           ;
;  B[3]           ; Clock      ; -0.240 ; -0.240 ; Rise       ; Clock           ;
;  B[4]           ; Clock      ; 0.133  ; 0.133  ; Rise       ; Clock           ;
;  B[5]           ; Clock      ; -0.792 ; -0.792 ; Rise       ; Clock           ;
;  B[6]           ; Clock      ; -0.875 ; -0.875 ; Rise       ; Clock           ;
;  B[7]           ; Clock      ; -0.865 ; -0.865 ; Rise       ; Clock           ;
; data_in         ; Clock      ; -1.234 ; -1.234 ; Rise       ; Clock           ;
; decoder_enabler ; Clock      ; -1.113 ; -1.113 ; Rise       ; Clock           ;
+-----------------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------------+
; Clock to Output Times                                                             ;
+---------------------+------------+--------+--------+------------+-----------------+
; Data Port           ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+---------------------+------------+--------+--------+------------+-----------------+
; R_first_four[*]     ; Clock      ; 9.812  ; 9.812  ; Rise       ; Clock           ;
;  R_first_four[0]    ; Clock      ; 9.798  ; 9.798  ; Rise       ; Clock           ;
;  R_first_four[1]    ; Clock      ; 9.812  ; 9.812  ; Rise       ; Clock           ;
;  R_first_four[2]    ; Clock      ; 9.658  ; 9.658  ; Rise       ; Clock           ;
;  R_first_four[3]    ; Clock      ; 9.611  ; 9.611  ; Rise       ; Clock           ;
;  R_first_four[4]    ; Clock      ; 9.563  ; 9.563  ; Rise       ; Clock           ;
;  R_first_four[5]    ; Clock      ; 9.345  ; 9.345  ; Rise       ; Clock           ;
;  R_first_four[6]    ; Clock      ; 9.410  ; 9.410  ; Rise       ; Clock           ;
; R_first_sign[*]     ; Clock      ; 8.743  ; 8.743  ; Rise       ; Clock           ;
;  R_first_sign[6]    ; Clock      ; 8.743  ; 8.743  ; Rise       ; Clock           ;
; R_last_four[*]      ; Clock      ; 8.206  ; 8.206  ; Rise       ; Clock           ;
;  R_last_four[0]     ; Clock      ; 7.928  ; 7.928  ; Rise       ; Clock           ;
;  R_last_four[1]     ; Clock      ; 7.923  ; 7.923  ; Rise       ; Clock           ;
;  R_last_four[2]     ; Clock      ; 7.922  ; 7.922  ; Rise       ; Clock           ;
;  R_last_four[3]     ; Clock      ; 8.198  ; 8.198  ; Rise       ; Clock           ;
;  R_last_four[4]     ; Clock      ; 8.202  ; 8.202  ; Rise       ; Clock           ;
;  R_last_four[5]     ; Clock      ; 8.186  ; 8.186  ; Rise       ; Clock           ;
;  R_last_four[6]     ; Clock      ; 8.206  ; 8.206  ; Rise       ; Clock           ;
; student_id_leds[*]  ; Clock      ; 10.322 ; 10.322 ; Rise       ; Clock           ;
;  student_id_leds[0] ; Clock      ; 10.039 ; 10.039 ; Rise       ; Clock           ;
;  student_id_leds[1] ; Clock      ; 10.056 ; 10.056 ; Rise       ; Clock           ;
;  student_id_leds[3] ; Clock      ; 10.322 ; 10.322 ; Rise       ; Clock           ;
;  student_id_leds[4] ; Clock      ; 10.045 ; 10.045 ; Rise       ; Clock           ;
;  student_id_leds[5] ; Clock      ; 10.320 ; 10.320 ; Rise       ; Clock           ;
;  student_id_leds[6] ; Clock      ; 10.318 ; 10.318 ; Rise       ; Clock           ;
+---------------------+------------+--------+--------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                   ;
+---------------------+------------+-------+-------+------------+-----------------+
; Data Port           ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]     ; Clock      ; 8.172 ; 8.172 ; Rise       ; Clock           ;
;  R_first_four[0]    ; Clock      ; 8.620 ; 8.620 ; Rise       ; Clock           ;
;  R_first_four[1]    ; Clock      ; 8.635 ; 8.635 ; Rise       ; Clock           ;
;  R_first_four[2]    ; Clock      ; 8.485 ; 8.485 ; Rise       ; Clock           ;
;  R_first_four[3]    ; Clock      ; 8.444 ; 8.444 ; Rise       ; Clock           ;
;  R_first_four[4]    ; Clock      ; 8.399 ; 8.399 ; Rise       ; Clock           ;
;  R_first_four[5]    ; Clock      ; 8.172 ; 8.172 ; Rise       ; Clock           ;
;  R_first_four[6]    ; Clock      ; 8.230 ; 8.230 ; Rise       ; Clock           ;
; R_first_sign[*]     ; Clock      ; 8.743 ; 8.743 ; Rise       ; Clock           ;
;  R_first_sign[6]    ; Clock      ; 8.743 ; 8.743 ; Rise       ; Clock           ;
; R_last_four[*]      ; Clock      ; 7.310 ; 7.310 ; Rise       ; Clock           ;
;  R_last_four[0]     ; Clock      ; 7.340 ; 7.340 ; Rise       ; Clock           ;
;  R_last_four[1]     ; Clock      ; 7.310 ; 7.310 ; Rise       ; Clock           ;
;  R_last_four[2]     ; Clock      ; 7.317 ; 7.317 ; Rise       ; Clock           ;
;  R_last_four[3]     ; Clock      ; 7.587 ; 7.587 ; Rise       ; Clock           ;
;  R_last_four[4]     ; Clock      ; 7.591 ; 7.591 ; Rise       ; Clock           ;
;  R_last_four[5]     ; Clock      ; 7.577 ; 7.577 ; Rise       ; Clock           ;
;  R_last_four[6]     ; Clock      ; 7.587 ; 7.587 ; Rise       ; Clock           ;
; student_id_leds[*]  ; Clock      ; 8.639 ; 8.639 ; Rise       ; Clock           ;
;  student_id_leds[0] ; Clock      ; 8.639 ; 8.639 ; Rise       ; Clock           ;
;  student_id_leds[1] ; Clock      ; 8.656 ; 8.656 ; Rise       ; Clock           ;
;  student_id_leds[3] ; Clock      ; 8.926 ; 8.926 ; Rise       ; Clock           ;
;  student_id_leds[4] ; Clock      ; 8.653 ; 8.653 ; Rise       ; Clock           ;
;  student_id_leds[5] ; Clock      ; 8.922 ; 8.922 ; Rise       ; Clock           ;
;  student_id_leds[6] ; Clock      ; 8.924 ; 8.924 ; Rise       ; Clock           ;
+---------------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; Clock ; -0.959 ; -7.233        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; Clock ; 0.266 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; Clock ; -1.222 ; -35.222               ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'Clock'                                                                                                      ;
+--------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; -0.959 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.993      ;
; -0.955 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.985      ;
; -0.949 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.979      ;
; -0.910 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.944      ;
; -0.906 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.936      ;
; -0.903 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.937      ;
; -0.891 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.921      ;
; -0.889 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.919      ;
; -0.874 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.909      ;
; -0.869 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.899      ;
; -0.863 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.893      ;
; -0.862 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.896      ;
; -0.862 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.892      ;
; -0.858 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.888      ;
; -0.855 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.885      ;
; -0.854 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.884      ;
; -0.841 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.875      ;
; -0.841 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.876      ;
; -0.840 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.870      ;
; -0.837 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.867      ;
; -0.831 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.865      ;
; -0.827 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.857      ;
; -0.825 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.860      ;
; -0.825 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.855      ;
; -0.820 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.855      ;
; -0.814 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.844      ;
; -0.809 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.843      ;
; -0.805 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.835      ;
; -0.804 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.839      ;
; -0.800 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.830      ;
; -0.795 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.825      ;
; -0.792 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.822      ;
; -0.791 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.826      ;
; -0.790 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.820      ;
; -0.790 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.820      ;
; -0.789 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.823      ;
; -0.787 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.817      ;
; -0.772 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.806      ;
; -0.771 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.801      ;
; -0.769 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.799      ;
; -0.768 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.798      ;
; -0.761 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.791      ;
; -0.760 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.794      ;
; -0.758 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.793      ;
; -0.756 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.786      ;
; -0.750 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.785      ;
; -0.742 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.777      ;
; -0.739 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.769      ;
; -0.737 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.771      ;
; -0.736 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.766      ;
; -0.733 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.763      ;
; -0.733 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.763      ;
; -0.727 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.762      ;
; -0.724 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.006      ; 1.762      ;
; -0.724 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.759      ;
; -0.722 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.752      ;
; -0.721 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.755      ;
; -0.721 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 1.760      ;
; -0.719 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.749      ;
; -0.717 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.747      ;
; -0.710 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.744      ;
; -0.702 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.736      ;
; -0.702 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.732      ;
; -0.698 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.728      ;
; -0.694 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.729      ;
; -0.694 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 1.733      ;
; -0.694 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.729      ;
; -0.693 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.727      ;
; -0.692 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.726      ;
; -0.690 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.720      ;
; -0.689 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.006     ; 1.715      ;
; -0.689 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.002      ; 1.723      ;
; -0.687 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.722      ;
; -0.687 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.006      ; 1.725      ;
; -0.685 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.715      ;
; -0.684 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.714      ;
; -0.673 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.708      ;
; -0.672 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 1.711      ;
; -0.669 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.699      ;
; -0.667 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.697      ;
; -0.667 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.702      ;
; -0.664 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.006     ; 1.690      ;
; -0.663 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.698      ;
; -0.652 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.687      ;
; -0.651 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.681      ;
; -0.651 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.006      ; 1.689      ;
; -0.650 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.007      ; 1.689      ;
; -0.650 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.006     ; 1.676      ;
; -0.641 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.676      ;
; -0.636 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.666      ;
; -0.633 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 1.000        ; -0.006     ; 1.659      ;
; -0.632 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.662      ;
; -0.621 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.656      ;
; -0.619 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.649      ;
; -0.617 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.652      ;
; -0.617 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 1.000        ; 0.006      ; 1.655      ;
; -0.615 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.645      ;
; -0.605 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 1.000        ; -0.002     ; 1.635      ;
; -0.604 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.639      ;
; -0.604 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 1.000        ; 0.003      ; 1.639      ;
+--------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'Clock'                                                                                                      ;
+-------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+
; 0.266 ; FSM:inst1|yfsm.s1         ; FSM:inst1|yfsm.s2   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.418      ;
; 0.316 ; FSM:inst1|yfsm.s0         ; FSM:inst1|yfsm.s1   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.468      ;
; 0.350 ; FSM:inst1|yfsm.s7         ; FSM:inst1|yfsm.s8   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.502      ;
; 0.353 ; FSM:inst1|yfsm.s6         ; FSM:inst1|yfsm.s7   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.505      ;
; 0.425 ; FSM:inst1|yfsm.s5         ; FSM:inst1|yfsm.s6   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.577      ;
; 0.471 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 0.625      ;
; 0.473 ; FSM:inst1|yfsm.s8         ; FSM:inst1|yfsm.s0   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.625      ;
; 0.502 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.652      ;
; 0.507 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.657      ;
; 0.519 ; FSM:inst1|yfsm.s3         ; FSM:inst1|yfsm.s4   ; Clock        ; Clock       ; 0.000        ; -0.003     ; 0.668      ;
; 0.519 ; FSM:inst1|yfsm.s4         ; FSM:inst1|yfsm.s5   ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.671      ;
; 0.561 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 0.716      ;
; 0.567 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.717      ;
; 0.568 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.718      ;
; 0.574 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 0.729      ;
; 0.577 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 0.731      ;
; 0.579 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.729      ;
; 0.585 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.735      ;
; 0.604 ; ALU:inst3|Neg             ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; 0.000      ; 0.756      ;
; 0.610 ; StorageUnit_A:inst5|Q[7]  ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.760      ;
; 0.618 ; FSM:inst1|yfsm.s8         ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.768      ;
; 0.732 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.005     ; 0.879      ;
; 0.744 ; FSM:inst1|yfsm.s2         ; FSM:inst1|yfsm.s3   ; Clock        ; Clock       ; 0.000        ; 0.003      ; 0.899      ;
; 0.746 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 0.892      ;
; 0.794 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.006     ; 0.940      ;
; 0.801 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.001     ; 0.952      ;
; 0.810 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.960      ;
; 0.816 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 0.966      ;
; 0.820 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 0.979      ;
; 0.820 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.006     ; 0.966      ;
; 0.843 ; StorageUnit_A:inst5|Q[0]  ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 0.998      ;
; 0.844 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.003      ;
; 0.858 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.008      ;
; 0.865 ; StorageUnit_A:inst5|Q[7]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.011      ;
; 0.872 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.031      ;
; 0.877 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.027      ;
; 0.884 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.038      ;
; 0.891 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.045      ;
; 0.909 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.059      ;
; 0.913 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.067      ;
; 0.917 ; StorageUnit_A:inst5|Q[1]  ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.067      ;
; 0.928 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; -0.001     ; 1.079      ;
; 0.928 ; StorageUnit_B:inst13|Q[0] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 1.083      ;
; 0.932 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.086      ;
; 0.937 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.091      ;
; 0.947 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.004      ; 1.103      ;
; 0.949 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.103      ;
; 0.950 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.100      ;
; 0.951 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.101      ;
; 0.955 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.109      ;
; 0.961 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.120      ;
; 0.962 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; -0.001     ; 1.113      ;
; 0.963 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.117      ;
; 0.987 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.137      ;
; 0.999 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.153      ;
; 1.004 ; StorageUnit_A:inst5|Q[6]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.150      ;
; 1.004 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.158      ;
; 1.011 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.157      ;
; 1.016 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.170      ;
; 1.017 ; StorageUnit_B:inst13|Q[6] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.163      ;
; 1.019 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.173      ;
; 1.020 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.179      ;
; 1.023 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.177      ;
; 1.024 ; StorageUnit_B:inst13|Q[1] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.174      ;
; 1.024 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.178      ;
; 1.028 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; -0.001     ; 1.179      ;
; 1.032 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 1.187      ;
; 1.036 ; StorageUnit_A:inst5|Q[5]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.182      ;
; 1.040 ; FSM:inst1|yfsm.s3         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.004      ; 1.196      ;
; 1.052 ; StorageUnit_B:inst13|Q[5] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.198      ;
; 1.058 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.006      ; 1.216      ;
; 1.061 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.215      ;
; 1.065 ; FSM:inst1|yfsm.s5         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.006      ; 1.223      ;
; 1.066 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.220      ;
; 1.073 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.227      ;
; 1.075 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.229      ;
; 1.075 ; StorageUnit_B:inst13|Q[4] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.221      ;
; 1.077 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.236      ;
; 1.078 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.232      ;
; 1.079 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.238      ;
; 1.080 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; -0.002     ; 1.230      ;
; 1.084 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[1] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.238      ;
; 1.087 ; FSM:inst1|yfsm.s6         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.246      ;
; 1.087 ; StorageUnit_A:inst5|Q[4]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.233      ;
; 1.090 ; FSM:inst1|yfsm.s7         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.244      ;
; 1.104 ; StorageUnit_A:inst5|Q[3]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.250      ;
; 1.107 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.266      ;
; 1.116 ; FSM:inst1|yfsm.s4         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.006      ; 1.274      ;
; 1.117 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.271      ;
; 1.123 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.277      ;
; 1.124 ; StorageUnit_B:inst13|Q[3] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.270      ;
; 1.125 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[2] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.279      ;
; 1.130 ; StorageUnit_A:inst5|Q[7]  ; ALU:inst3|Result[3] ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.276      ;
; 1.133 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[7] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.287      ;
; 1.137 ; FSM:inst1|yfsm.s2         ; ALU:inst3|Result[6] ; Clock        ; Clock       ; 0.000        ; 0.006      ; 1.295      ;
; 1.143 ; StorageUnit_B:inst13|Q[7] ; ALU:inst3|Result[0] ; Clock        ; Clock       ; 0.000        ; 0.003      ; 1.298      ;
; 1.143 ; FSM:inst1|yfsm.s0         ; ALU:inst3|Result[4] ; Clock        ; Clock       ; 0.000        ; 0.002      ; 1.297      ;
; 1.146 ; StorageUnit_B:inst13|Q[2] ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.292      ;
; 1.149 ; FSM:inst1|yfsm.s1         ; ALU:inst3|Result[5] ; Clock        ; Clock       ; 0.000        ; 0.007      ; 1.308      ;
; 1.156 ; StorageUnit_A:inst5|Q[2]  ; ALU:inst3|Neg       ; Clock        ; Clock       ; 0.000        ; -0.006     ; 1.302      ;
+-------+---------------------------+---------------------+--------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'Clock'                                                                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; Clock ; Rise       ; Clock                       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Neg               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Neg               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[2]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[2]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[3]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[3]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[4]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[4]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[5]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[5]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[6]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[6]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; ALU:inst3|Result[7]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; ALU:inst3|Result[7]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s0           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s0           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s1           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s1           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s2           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s2           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s3           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s3           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s4           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s4           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s5           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s5           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s6           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s6           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s7           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s7           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; FSM:inst1|yfsm.s8           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; FSM:inst1|yfsm.s8           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_A:inst5|Q[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_A:inst5|Q[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[4]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[4]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[5]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[5]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[6]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[6]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; Clock ; Rise       ; StorageUnit_B:inst13|Q[7]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; Clock ; Rise       ; StorageUnit_B:inst13|Q[7]   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock|combout               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock|combout               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clk_delay_ctrl|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clk_delay_ctrl|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clk_delay_ctrl|clkout ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clk_delay_ctrl|clkout ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clkctrl|inclk[0]      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; Clock~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; Clock~clkctrl|outclk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[2]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[3]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst13|Q[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst13|Q[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst1|yfsm.s0|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst1|yfsm.s0|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst1|yfsm.s1|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; Clock ; Rise       ; inst1|yfsm.s1|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; Clock ; Rise       ; inst1|yfsm.s2|clk           ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+


+-------------------------------------------------------------------------------+
; Setup Times                                                                   ;
+-----------------+------------+--------+--------+------------+-----------------+
; Data Port       ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------------+------------+--------+--------+------------+-----------------+
; A[*]            ; Clock      ; 2.517  ; 2.517  ; Rise       ; Clock           ;
;  A[0]           ; Clock      ; 0.147  ; 0.147  ; Rise       ; Clock           ;
;  A[1]           ; Clock      ; 0.029  ; 0.029  ; Rise       ; Clock           ;
;  A[2]           ; Clock      ; -0.048 ; -0.048 ; Rise       ; Clock           ;
;  A[3]           ; Clock      ; 2.264  ; 2.264  ; Rise       ; Clock           ;
;  A[4]           ; Clock      ; 2.339  ; 2.339  ; Rise       ; Clock           ;
;  A[5]           ; Clock      ; 2.366  ; 2.366  ; Rise       ; Clock           ;
;  A[6]           ; Clock      ; 2.517  ; 2.517  ; Rise       ; Clock           ;
;  A[7]           ; Clock      ; 2.285  ; 2.285  ; Rise       ; Clock           ;
; B[*]            ; Clock      ; 0.428  ; 0.428  ; Rise       ; Clock           ;
;  B[0]           ; Clock      ; 0.428  ; 0.428  ; Rise       ; Clock           ;
;  B[1]           ; Clock      ; -0.041 ; -0.041 ; Rise       ; Clock           ;
;  B[2]           ; Clock      ; -0.100 ; -0.100 ; Rise       ; Clock           ;
;  B[3]           ; Clock      ; -0.035 ; -0.035 ; Rise       ; Clock           ;
;  B[4]           ; Clock      ; -0.188 ; -0.188 ; Rise       ; Clock           ;
;  B[5]           ; Clock      ; 0.315  ; 0.315  ; Rise       ; Clock           ;
;  B[6]           ; Clock      ; 0.375  ; 0.375  ; Rise       ; Clock           ;
;  B[7]           ; Clock      ; 0.364  ; 0.364  ; Rise       ; Clock           ;
; data_in         ; Clock      ; 0.707  ; 0.707  ; Rise       ; Clock           ;
; decoder_enabler ; Clock      ; 0.825  ; 0.825  ; Rise       ; Clock           ;
+-----------------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Hold Times                                                                    ;
+-----------------+------------+--------+--------+------------+-----------------+
; Data Port       ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------------+------------+--------+--------+------------+-----------------+
; A[*]            ; Clock      ; 0.168  ; 0.168  ; Rise       ; Clock           ;
;  A[0]           ; Clock      ; -0.027 ; -0.027 ; Rise       ; Clock           ;
;  A[1]           ; Clock      ; 0.091  ; 0.091  ; Rise       ; Clock           ;
;  A[2]           ; Clock      ; 0.168  ; 0.168  ; Rise       ; Clock           ;
;  A[3]           ; Clock      ; -2.144 ; -2.144 ; Rise       ; Clock           ;
;  A[4]           ; Clock      ; -2.219 ; -2.219 ; Rise       ; Clock           ;
;  A[5]           ; Clock      ; -2.246 ; -2.246 ; Rise       ; Clock           ;
;  A[6]           ; Clock      ; -2.397 ; -2.397 ; Rise       ; Clock           ;
;  A[7]           ; Clock      ; -2.165 ; -2.165 ; Rise       ; Clock           ;
; B[*]            ; Clock      ; 0.308  ; 0.308  ; Rise       ; Clock           ;
;  B[0]           ; Clock      ; -0.308 ; -0.308 ; Rise       ; Clock           ;
;  B[1]           ; Clock      ; 0.161  ; 0.161  ; Rise       ; Clock           ;
;  B[2]           ; Clock      ; 0.220  ; 0.220  ; Rise       ; Clock           ;
;  B[3]           ; Clock      ; 0.155  ; 0.155  ; Rise       ; Clock           ;
;  B[4]           ; Clock      ; 0.308  ; 0.308  ; Rise       ; Clock           ;
;  B[5]           ; Clock      ; -0.195 ; -0.195 ; Rise       ; Clock           ;
;  B[6]           ; Clock      ; -0.255 ; -0.255 ; Rise       ; Clock           ;
;  B[7]           ; Clock      ; -0.244 ; -0.244 ; Rise       ; Clock           ;
; data_in         ; Clock      ; -0.487 ; -0.487 ; Rise       ; Clock           ;
; decoder_enabler ; Clock      ; -0.327 ; -0.327 ; Rise       ; Clock           ;
+-----------------+------------+--------+--------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Clock to Output Times                                                           ;
+---------------------+------------+-------+-------+------------+-----------------+
; Data Port           ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]     ; Clock      ; 5.159 ; 5.159 ; Rise       ; Clock           ;
;  R_first_four[0]    ; Clock      ; 5.150 ; 5.150 ; Rise       ; Clock           ;
;  R_first_four[1]    ; Clock      ; 5.159 ; 5.159 ; Rise       ; Clock           ;
;  R_first_four[2]    ; Clock      ; 5.032 ; 5.032 ; Rise       ; Clock           ;
;  R_first_four[3]    ; Clock      ; 5.003 ; 5.003 ; Rise       ; Clock           ;
;  R_first_four[4]    ; Clock      ; 4.994 ; 4.994 ; Rise       ; Clock           ;
;  R_first_four[5]    ; Clock      ; 4.892 ; 4.892 ; Rise       ; Clock           ;
;  R_first_four[6]    ; Clock      ; 4.937 ; 4.937 ; Rise       ; Clock           ;
; R_first_sign[*]     ; Clock      ; 4.759 ; 4.759 ; Rise       ; Clock           ;
;  R_first_sign[6]    ; Clock      ; 4.759 ; 4.759 ; Rise       ; Clock           ;
; R_last_four[*]      ; Clock      ; 4.423 ; 4.423 ; Rise       ; Clock           ;
;  R_last_four[0]     ; Clock      ; 4.305 ; 4.305 ; Rise       ; Clock           ;
;  R_last_four[1]     ; Clock      ; 4.274 ; 4.274 ; Rise       ; Clock           ;
;  R_last_four[2]     ; Clock      ; 4.288 ; 4.288 ; Rise       ; Clock           ;
;  R_last_four[3]     ; Clock      ; 4.421 ; 4.421 ; Rise       ; Clock           ;
;  R_last_four[4]     ; Clock      ; 4.423 ; 4.423 ; Rise       ; Clock           ;
;  R_last_four[5]     ; Clock      ; 4.417 ; 4.417 ; Rise       ; Clock           ;
;  R_last_four[6]     ; Clock      ; 4.421 ; 4.421 ; Rise       ; Clock           ;
; student_id_leds[*]  ; Clock      ; 5.347 ; 5.347 ; Rise       ; Clock           ;
;  student_id_leds[0] ; Clock      ; 5.214 ; 5.214 ; Rise       ; Clock           ;
;  student_id_leds[1] ; Clock      ; 5.228 ; 5.228 ; Rise       ; Clock           ;
;  student_id_leds[3] ; Clock      ; 5.344 ; 5.344 ; Rise       ; Clock           ;
;  student_id_leds[4] ; Clock      ; 5.221 ; 5.221 ; Rise       ; Clock           ;
;  student_id_leds[5] ; Clock      ; 5.345 ; 5.345 ; Rise       ; Clock           ;
;  student_id_leds[6] ; Clock      ; 5.347 ; 5.347 ; Rise       ; Clock           ;
+---------------------+------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                   ;
+---------------------+------------+-------+-------+------------+-----------------+
; Data Port           ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]     ; Clock      ; 4.417 ; 4.417 ; Rise       ; Clock           ;
;  R_first_four[0]    ; Clock      ; 4.670 ; 4.670 ; Rise       ; Clock           ;
;  R_first_four[1]    ; Clock      ; 4.681 ; 4.681 ; Rise       ; Clock           ;
;  R_first_four[2]    ; Clock      ; 4.557 ; 4.557 ; Rise       ; Clock           ;
;  R_first_four[3]    ; Clock      ; 4.533 ; 4.533 ; Rise       ; Clock           ;
;  R_first_four[4]    ; Clock      ; 4.529 ; 4.529 ; Rise       ; Clock           ;
;  R_first_four[5]    ; Clock      ; 4.417 ; 4.417 ; Rise       ; Clock           ;
;  R_first_four[6]    ; Clock      ; 4.457 ; 4.457 ; Rise       ; Clock           ;
; R_first_sign[*]     ; Clock      ; 4.759 ; 4.759 ; Rise       ; Clock           ;
;  R_first_sign[6]    ; Clock      ; 4.759 ; 4.759 ; Rise       ; Clock           ;
; R_last_four[*]      ; Clock      ; 4.010 ; 4.010 ; Rise       ; Clock           ;
;  R_last_four[0]     ; Clock      ; 4.041 ; 4.041 ; Rise       ; Clock           ;
;  R_last_four[1]     ; Clock      ; 4.010 ; 4.010 ; Rise       ; Clock           ;
;  R_last_four[2]     ; Clock      ; 4.015 ; 4.015 ; Rise       ; Clock           ;
;  R_last_four[3]     ; Clock      ; 4.156 ; 4.156 ; Rise       ; Clock           ;
;  R_last_four[4]     ; Clock      ; 4.160 ; 4.160 ; Rise       ; Clock           ;
;  R_last_four[5]     ; Clock      ; 4.147 ; 4.147 ; Rise       ; Clock           ;
;  R_last_four[6]     ; Clock      ; 4.155 ; 4.155 ; Rise       ; Clock           ;
; student_id_leds[*]  ; Clock      ; 4.587 ; 4.587 ; Rise       ; Clock           ;
;  student_id_leds[0] ; Clock      ; 4.587 ; 4.587 ; Rise       ; Clock           ;
;  student_id_leds[1] ; Clock      ; 4.602 ; 4.602 ; Rise       ; Clock           ;
;  student_id_leds[3] ; Clock      ; 4.719 ; 4.719 ; Rise       ; Clock           ;
;  student_id_leds[4] ; Clock      ; 4.603 ; 4.603 ; Rise       ; Clock           ;
;  student_id_leds[5] ; Clock      ; 4.721 ; 4.721 ; Rise       ; Clock           ;
;  student_id_leds[6] ; Clock      ; 4.720 ; 4.720 ; Rise       ; Clock           ;
+---------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -3.476  ; 0.266 ; N/A      ; N/A     ; -1.222              ;
;  Clock           ; -3.476  ; 0.266 ; N/A      ; N/A     ; -1.222              ;
; Design-wide TNS  ; -29.891 ; 0.0   ; 0.0      ; 0.0     ; -35.222             ;
;  Clock           ; -29.891 ; 0.000 ; N/A      ; N/A     ; -35.222             ;
+------------------+---------+-------+----------+---------+---------------------+


+-----------------------------------------------------------------------------+
; Setup Times                                                                 ;
+-----------------+------------+-------+-------+------------+-----------------+
; Data Port       ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------------+------------+-------+-------+------------+-----------------+
; A[*]            ; Clock      ; 4.568 ; 4.568 ; Rise       ; Clock           ;
;  A[0]           ; Clock      ; 0.705 ; 0.705 ; Rise       ; Clock           ;
;  A[1]           ; Clock      ; 0.481 ; 0.481 ; Rise       ; Clock           ;
;  A[2]           ; Clock      ; 0.306 ; 0.306 ; Rise       ; Clock           ;
;  A[3]           ; Clock      ; 4.084 ; 4.084 ; Rise       ; Clock           ;
;  A[4]           ; Clock      ; 4.173 ; 4.173 ; Rise       ; Clock           ;
;  A[5]           ; Clock      ; 4.323 ; 4.323 ; Rise       ; Clock           ;
;  A[6]           ; Clock      ; 4.568 ; 4.568 ; Rise       ; Clock           ;
;  A[7]           ; Clock      ; 4.105 ; 4.105 ; Rise       ; Clock           ;
; B[*]            ; Clock      ; 1.259 ; 1.259 ; Rise       ; Clock           ;
;  B[0]           ; Clock      ; 1.259 ; 1.259 ; Rise       ; Clock           ;
;  B[1]           ; Clock      ; 0.453 ; 0.453 ; Rise       ; Clock           ;
;  B[2]           ; Clock      ; 0.220 ; 0.220 ; Rise       ; Clock           ;
;  B[3]           ; Clock      ; 0.470 ; 0.470 ; Rise       ; Clock           ;
;  B[4]           ; Clock      ; 0.097 ; 0.097 ; Rise       ; Clock           ;
;  B[5]           ; Clock      ; 1.022 ; 1.022 ; Rise       ; Clock           ;
;  B[6]           ; Clock      ; 1.105 ; 1.105 ; Rise       ; Clock           ;
;  B[7]           ; Clock      ; 1.095 ; 1.095 ; Rise       ; Clock           ;
; data_in         ; Clock      ; 1.689 ; 1.689 ; Rise       ; Clock           ;
; decoder_enabler ; Clock      ; 2.017 ; 2.017 ; Rise       ; Clock           ;
+-----------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Hold Times                                                                    ;
+-----------------+------------+--------+--------+------------+-----------------+
; Data Port       ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------------+------------+--------+--------+------------+-----------------+
; A[*]            ; Clock      ; 0.168  ; 0.168  ; Rise       ; Clock           ;
;  A[0]           ; Clock      ; -0.027 ; -0.027 ; Rise       ; Clock           ;
;  A[1]           ; Clock      ; 0.091  ; 0.091  ; Rise       ; Clock           ;
;  A[2]           ; Clock      ; 0.168  ; 0.168  ; Rise       ; Clock           ;
;  A[3]           ; Clock      ; -2.144 ; -2.144 ; Rise       ; Clock           ;
;  A[4]           ; Clock      ; -2.219 ; -2.219 ; Rise       ; Clock           ;
;  A[5]           ; Clock      ; -2.246 ; -2.246 ; Rise       ; Clock           ;
;  A[6]           ; Clock      ; -2.397 ; -2.397 ; Rise       ; Clock           ;
;  A[7]           ; Clock      ; -2.165 ; -2.165 ; Rise       ; Clock           ;
; B[*]            ; Clock      ; 0.308  ; 0.308  ; Rise       ; Clock           ;
;  B[0]           ; Clock      ; -0.308 ; -0.308 ; Rise       ; Clock           ;
;  B[1]           ; Clock      ; 0.161  ; 0.161  ; Rise       ; Clock           ;
;  B[2]           ; Clock      ; 0.220  ; 0.220  ; Rise       ; Clock           ;
;  B[3]           ; Clock      ; 0.155  ; 0.155  ; Rise       ; Clock           ;
;  B[4]           ; Clock      ; 0.308  ; 0.308  ; Rise       ; Clock           ;
;  B[5]           ; Clock      ; -0.195 ; -0.195 ; Rise       ; Clock           ;
;  B[6]           ; Clock      ; -0.255 ; -0.255 ; Rise       ; Clock           ;
;  B[7]           ; Clock      ; -0.244 ; -0.244 ; Rise       ; Clock           ;
; data_in         ; Clock      ; -0.487 ; -0.487 ; Rise       ; Clock           ;
; decoder_enabler ; Clock      ; -0.327 ; -0.327 ; Rise       ; Clock           ;
+-----------------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------------------+
; Clock to Output Times                                                             ;
+---------------------+------------+--------+--------+------------+-----------------+
; Data Port           ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+---------------------+------------+--------+--------+------------+-----------------+
; R_first_four[*]     ; Clock      ; 9.812  ; 9.812  ; Rise       ; Clock           ;
;  R_first_four[0]    ; Clock      ; 9.798  ; 9.798  ; Rise       ; Clock           ;
;  R_first_four[1]    ; Clock      ; 9.812  ; 9.812  ; Rise       ; Clock           ;
;  R_first_four[2]    ; Clock      ; 9.658  ; 9.658  ; Rise       ; Clock           ;
;  R_first_four[3]    ; Clock      ; 9.611  ; 9.611  ; Rise       ; Clock           ;
;  R_first_four[4]    ; Clock      ; 9.563  ; 9.563  ; Rise       ; Clock           ;
;  R_first_four[5]    ; Clock      ; 9.345  ; 9.345  ; Rise       ; Clock           ;
;  R_first_four[6]    ; Clock      ; 9.410  ; 9.410  ; Rise       ; Clock           ;
; R_first_sign[*]     ; Clock      ; 8.743  ; 8.743  ; Rise       ; Clock           ;
;  R_first_sign[6]    ; Clock      ; 8.743  ; 8.743  ; Rise       ; Clock           ;
; R_last_four[*]      ; Clock      ; 8.206  ; 8.206  ; Rise       ; Clock           ;
;  R_last_four[0]     ; Clock      ; 7.928  ; 7.928  ; Rise       ; Clock           ;
;  R_last_four[1]     ; Clock      ; 7.923  ; 7.923  ; Rise       ; Clock           ;
;  R_last_four[2]     ; Clock      ; 7.922  ; 7.922  ; Rise       ; Clock           ;
;  R_last_four[3]     ; Clock      ; 8.198  ; 8.198  ; Rise       ; Clock           ;
;  R_last_four[4]     ; Clock      ; 8.202  ; 8.202  ; Rise       ; Clock           ;
;  R_last_four[5]     ; Clock      ; 8.186  ; 8.186  ; Rise       ; Clock           ;
;  R_last_four[6]     ; Clock      ; 8.206  ; 8.206  ; Rise       ; Clock           ;
; student_id_leds[*]  ; Clock      ; 10.322 ; 10.322 ; Rise       ; Clock           ;
;  student_id_leds[0] ; Clock      ; 10.039 ; 10.039 ; Rise       ; Clock           ;
;  student_id_leds[1] ; Clock      ; 10.056 ; 10.056 ; Rise       ; Clock           ;
;  student_id_leds[3] ; Clock      ; 10.322 ; 10.322 ; Rise       ; Clock           ;
;  student_id_leds[4] ; Clock      ; 10.045 ; 10.045 ; Rise       ; Clock           ;
;  student_id_leds[5] ; Clock      ; 10.320 ; 10.320 ; Rise       ; Clock           ;
;  student_id_leds[6] ; Clock      ; 10.318 ; 10.318 ; Rise       ; Clock           ;
+---------------------+------------+--------+--------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                   ;
+---------------------+------------+-------+-------+------------+-----------------+
; Data Port           ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+---------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]     ; Clock      ; 4.417 ; 4.417 ; Rise       ; Clock           ;
;  R_first_four[0]    ; Clock      ; 4.670 ; 4.670 ; Rise       ; Clock           ;
;  R_first_four[1]    ; Clock      ; 4.681 ; 4.681 ; Rise       ; Clock           ;
;  R_first_four[2]    ; Clock      ; 4.557 ; 4.557 ; Rise       ; Clock           ;
;  R_first_four[3]    ; Clock      ; 4.533 ; 4.533 ; Rise       ; Clock           ;
;  R_first_four[4]    ; Clock      ; 4.529 ; 4.529 ; Rise       ; Clock           ;
;  R_first_four[5]    ; Clock      ; 4.417 ; 4.417 ; Rise       ; Clock           ;
;  R_first_four[6]    ; Clock      ; 4.457 ; 4.457 ; Rise       ; Clock           ;
; R_first_sign[*]     ; Clock      ; 4.759 ; 4.759 ; Rise       ; Clock           ;
;  R_first_sign[6]    ; Clock      ; 4.759 ; 4.759 ; Rise       ; Clock           ;
; R_last_four[*]      ; Clock      ; 4.010 ; 4.010 ; Rise       ; Clock           ;
;  R_last_four[0]     ; Clock      ; 4.041 ; 4.041 ; Rise       ; Clock           ;
;  R_last_four[1]     ; Clock      ; 4.010 ; 4.010 ; Rise       ; Clock           ;
;  R_last_four[2]     ; Clock      ; 4.015 ; 4.015 ; Rise       ; Clock           ;
;  R_last_four[3]     ; Clock      ; 4.156 ; 4.156 ; Rise       ; Clock           ;
;  R_last_four[4]     ; Clock      ; 4.160 ; 4.160 ; Rise       ; Clock           ;
;  R_last_four[5]     ; Clock      ; 4.147 ; 4.147 ; Rise       ; Clock           ;
;  R_last_four[6]     ; Clock      ; 4.155 ; 4.155 ; Rise       ; Clock           ;
; student_id_leds[*]  ; Clock      ; 4.587 ; 4.587 ; Rise       ; Clock           ;
;  student_id_leds[0] ; Clock      ; 4.587 ; 4.587 ; Rise       ; Clock           ;
;  student_id_leds[1] ; Clock      ; 4.602 ; 4.602 ; Rise       ; Clock           ;
;  student_id_leds[3] ; Clock      ; 4.719 ; 4.719 ; Rise       ; Clock           ;
;  student_id_leds[4] ; Clock      ; 4.603 ; 4.603 ; Rise       ; Clock           ;
;  student_id_leds[5] ; Clock      ; 4.721 ; 4.721 ; Rise       ; Clock           ;
;  student_id_leds[6] ; Clock      ; 4.720 ; 4.720 ; Rise       ; Clock           ;
+---------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; Clock      ; Clock    ; 789      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; Clock      ; Clock    ; 789      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 19    ; 19   ;
; Unconstrained Input Port Paths  ; 59    ; 59   ;
; Unconstrained Output Ports      ; 21    ; 21   ;
; Unconstrained Output Port Paths ; 98    ; 98   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Nov 28 18:44:48 2023
Info: Command: quartus_sta Lab6 -c Lab6
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'Lab6.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name Clock Clock
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.476
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.476       -29.891 Clock 
Info (332146): Worst-case hold slack is 0.561
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.561         0.000 Clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -35.222 Clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.959
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.959        -7.233 Clock 
Info (332146): Worst-case hold slack is 0.266
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.266         0.000 Clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -35.222 Clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 4552 megabytes
    Info: Processing ended: Tue Nov 28 18:44:49 2023
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


